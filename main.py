# –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç v.004
# –°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç: t.me/Tyurina_Elena_1MD15_bot

import random
import json
from gettext import find
from io import BytesIO

import telebot  # pyTelegramBotAPI 4.3.1
from telebot import types
import requests
import bs4
import BotGames # –±–æ—Ç-–∏–≥—Ä—ã
from menuBot import Menu
import DZ

bot = telebot.TeleBot('5144148734:AAEL1qxIJIXxsHP7lkCwtL9Pb4cLHE3a4RM')

# —Ñ—É–Ω–∫—Ü–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –∫–æ–º–∞–Ω–¥—ã
@bot.message_handler(commands=["start"])
def start(message, res=False):
    txt_message = f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø - —Ç–µ–∫—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è –∫—É—Ä—Å–∞ " \
                  f"–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —è–∑—ã–∫–µ –ü–∞–π—Ç–æ–Ω!"
    bot.send_message(chat_id, text=txt_message, reply_markup=Menu.getMenu("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é").markup)
    # chat_id = message.chat.id
    #
    # markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # btn1 = types.KeyboardButton("üëã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    # btn2 = types.KeyboardButton("‚ùì –ü–æ–º–æ—â—å")
    # markup.add(btn1, btn2)
    #
    # bot.send_message(chat_id,
    #                  text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø - —Ç–µ–∫—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è –∫—É—Ä—Å–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è "
    #                       "–Ω–∞ —è–∑—ã–∫–µ –ü–∞–π—Ç–æ–Ω!".format(message.from_user), reply_markup=markup)

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç —é–∑–µ—Ä–∞
@bot.message_handler(content_types=['text'])
def get_text_message(message):
    global game21

    chat_id = message.chat.id
    ms_text = message.text

    result = goto_menu(chat_id,ms_text) # –ø–æ–ø—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç, –∫–∞–∫ –∫–æ–º–∞–Ω–¥—É –º–µ–Ω—é, –∏ –≤–æ–π—Ç–∏ –≤ –º–µ–Ω—é
    if result == True:
        return #–≤–æ—à–ª–∏ –≤ –ø–æ–¥–º–µ–Ω—é, –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è

    if Menu.cur_menu != None and ms_text in Menu.cur_menu.buttons:

        if ms_text == ms_text == "–ü–æ–º–æ—â—å":
            send_help(chat_id)

        elif ms_text == "–ü—Ä–∏—Å–ª–∞—Ç—å —Å–æ–±–∞–∫—É":
            bot.send_photo(chat_id, photo=get_dogURL(), caption="–í–æ—Ç —Ç–µ–±–µ —Å–æ–±–∞—á–∫–∞!")

        elif ms_text == "–ü—Ä–∏—Å–ª–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç":
            bot.send_message(chat_id, text=get_anekdot())

        elif ms_text == "–£–≥–∞–¥–∞–π, –∫—Ç–æ?":
            get_ManOrNot(chat_id)
        elif ms_text == "–ö–∞—Ä—Ç—É"
            if game21 == None:
                goto_menu(chat_id, "–í—ã—Ö–æ–¥")
                return

            text_game = game21.get_cards(1)
            bot.send_media_group(chat_id, media=getMediaCards(game21)) # –ø–æ–ª—É—á–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã
            bot.send_message(chat_id, text=text_game)

            if game21.status != None: #–≤—ã—Ö–æ–¥, –µ—Å–ª–∏ –∏–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞
                goto_menu(chat_id, "–í—ã—Ö–æ–¥")
                return

        elif ms_text == "–°—Ç–æ–ø!":
            game21 = None
            goto_menu(chat_id, "–í—ã—Ö–æ–¥")
            return

        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 1":
            DZ.dz1(bot, chat_id)

        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 2":
            DZ.dz2(bot, chat_id)

        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 3":
            DZ.dz3(bot, chat_id)

        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 4":
            DZ.dz4(bot, chat_id)

        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 5":
            DZ.dz5(bot, chat_id)

        elif ms_text == "–ó–∞–¥–∞–Ω–∏–µ 6":
            DZ.dz6(bot, chat_id)

    else:
        bot.send_message(chat_id, text="–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É: " + ms_text)
        goto_menu(chat_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call): # –ø–µ—Ä–µ–¥–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    pass

def goto_menu(chat_id, name_menu): # –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω—É–∂–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–µ–Ω—é
    if name_menu == "–í—ã—Ö–æ–¥" and Menu.cur_menu != None and Menu.cur_menu.parent != None:
        target_menu = Menu.getMenu(Menu.cur_menu.parent.name)
    else:
        target_menu = Menu.getMenu(name_menu)

    if target_menu != None:
        bot.send_message(chat_id, text=target_menu.name, reply_markup=target_menu.markup)

        if target_menu.name == "–ò–≥—Ä–∞ –≤ 21":
            global game21
            game21 = BotGames.Game21() #–Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∏–≥—Ä—ã
            text_game = game21.get_cards(2) # –ø—Ä–æ—Å–∏–º 2 –∫–∞—Ä—Ç—ã
            bot.send_media_group(chat_id, media=getMediaCards(game21))
            bot.send_message(chat_id, text=text_game)

        return True
    else:
        return False

def getMediaCards(game21):
    medias = []
    for url in game21.arr_cards_URL:
        medias.append(types.InputMediaPhoto(url))
    return medias

def send_help(chat_id):
    global bot
    bot.send_message(chat_id, text="–ê–≤—Ç–æ—Ä: –¢—é—Ä–∏–Ω–∞ –ï–ª–µ–Ω–∞")
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text="–ù–∞–ø–∏—à–∏—Ç–µ –∞–≤—Ç–æ—Ä—É",
                                      url="https://t.me/helenatyurina")
    markup.add(btn1)
    img = open('1–ú–î15_–¢—é—Ä–∏–Ω–∞_–ï–ª–µ–Ω–∞.jpg', 'rb')
    bot.send_photo(message.chat.id, img, reply_markup=key1)

def get_anekdot():
    array_anekdots = []
    req_anek = requests.get('http://anekdotme.ru/random')
    if req_anek.status_code == 200:
        soup = bs4.BeautifulSoup(req_anek.text, "html.parser")
        result_find = soup.select('.anekdot_text')
        for result in result_find:
            array_anekdots.append(result.getText().strip())
    if len(array_anekdots) > 0:
        return array_anekdots[0]
    else:
        return ""

def get_dogURL():
    url = ""
    req = requests.get('https://random.dog/woof.json')
    if req.status_code == 200:
        r_json = req.json()
        url = r.json()
        url = r_json['url']
    return url




#     if ms_text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" or ms_text == "üëã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" or ms_text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
#         markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#         btn1 = types.KeyboardButton("–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è")
#         btn2 = types.KeyboardButton("WEB-–∫–∞–º–µ—Ä–∞")
#         btn3 = types.KeyboardButton("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
#         btn4 = types.KeyboardButton("–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ")
#         back = types.KeyboardButton("–ü–æ–º–æ—â—å")
#         markup.add(btn1, btn2, btn3, btn4, back)
#         bot.send_message(chat_id, text="–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=markup)
#
#     elif ms_text == "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è":
#         markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#         btn1 = types.KeyboardButton("–ü—Ä–∏—Å–ª–∞—Ç—å —Å–æ–±–∞–∫—É")
#         btn2 = types.KeyboardButton("–ü—Ä–∏—Å–ª–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç")
#         btn3 = types.KeyboardButton("–ú—É–¥—Ä–æ—Å—Ç—å –¥–Ω—è")
#         btn4 = types.KeyboardButton("Generate insult")
#         back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
#         markup.add(btn1, btn2, btn3, btn4, back)
#         bot.send_message(chat_id, text="–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", reply_markup=markup)
#
#     elif ms_text == "/dog" or ms_text == "–ü—Ä–∏—Å–ª–∞—Ç—å —Å–æ–±–∞–∫—É":
#         contents = requests.get('https://random.dog/woof.json').json()
#         urlDOG = contents['url']
#         bot.send_photo(chat_id, photo=urlDOG, caption="–í–æ—Ç —Ç–µ–±–µ —Å–æ–±–∞—á–∫–∞!")
#
#     elif ms_text == "–ü—Ä–∏—Å–ª–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç":
#         bot.send_message(chat_id, text=get_anekdot())
#
#     elif ms_text == "Generate insult":
#         contents = requests.get('https://evilinsult.com/generate_insult.php?lang=en&type=json').json()
#         insult = contents['insult']
#         bot.send_message(chat_id, text=insult)
#
#     elif ms_text == "–ú—É–¥—Ä–æ—Å—Ç—å –¥–Ω—è":
#         bot.send_message(chat_id, text=get_wolf_quote() + "üê∫")
#
#     elif ms_text == "WEB-–∫–∞–º–µ—Ä–∞":
#         bot.send_message(chat_id, text="–ï—â—ë –Ω–µ –≥–æ—Ç–æ–≤–æ(((")
#
#     elif ms_text == "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ":
#         bot.send_message(chat_id, text="–ï—â—ë –Ω–µ –≥–æ—Ç–æ–≤–æ(((")
#
#     elif ms_text == "–ü–æ–º–æ—â—å" or ms_text == "/help":
#         bot.send_message(chat_id, text="–ê–≤—Ç–æ—Ä: –¢—é—Ä–∏–Ω–∞ –ï–ª–µ–Ω–∞")
#         key1 = types.InlineKeyboardMarkup()
#         btn1 = types.InlineKeyboardButton(text="–ù–∞–ø–∏—à–∏—Ç–µ –∞–≤—Ç–æ—Ä—É",
#                                           url="https://t.me/helenatyurina")
#         key1.add(btn1)
#         img = open('1–ú–î15_–¢—é—Ä–∏–Ω–∞_–ï–ª–µ–Ω–∞.jpg', 'rb')
#         bot.send_photo(message.chat.id, img, reply_markup=key1)
#
#     elif ms_text == "–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ":
#         markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#         btn1 = types.KeyboardButton("1")
#         btn2 = types.KeyboardButton("2")
#         btn3 = types.KeyboardButton("3")
#         btn45 = types.KeyboardButton("4-5")
#         btn6 = types.KeyboardButton("6")
#         btn7 = types.KeyboardButton("7")
#         btn8 = types.KeyboardButton("8")
#         btn9 = types.KeyboardButton("9")
#         btn10 = types.KeyboardButton("10")
#         btn11 = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
#         markup.add(btn1, btn2, btn3, btn45, btn6, btn7, btn8, btn9, btn10, btn11)
#         bot.send_message(chat_id, text="–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ", reply_markup=markup)
#     #
#     elif ms_text == "1":
#         name = "–ï–ª–µ–Ω–∞"
#         bot.send_message(chat_id, text=name)
#     elif ms_text == "2":
#         name = "–ï–ª–µ–Ω–∞"
#         age = "20"
#         bot.send_message(chat_id, text=f"–ú–µ–Ω—è –∑–æ–≤—É—Ç {name}, –º–Ω–µ {age} –ª–µ—Ç")
#     elif ms_text == "3":
#         name = "–ï–ª–µ–Ω–∞"
#         five_names = name * 4 + name
#         bot.send_message(chat_id, text=five_names)
#     elif ms_text == "4-5":
#         pass
#         # user_name = input("Enter your name: ")
#         # if " " in user_name:
#         #     print("Only name is required!")
#         #     exit()
#         # user_age = input("Enter your age: ")
#         # print("Hello, " + user_name + "!")
#         # try:
#         #     user_age = int(user_age)
#         # except ValueError:
#         #     print("Age entered incorrectly: it should be number")
#         #     exit()
#         # if (user_age <= 0) or (user_age > 150):
#         #     print("Age entered incorrectly: it should be strictly between 0 and 150")
#         #     exit()
#         # if (user_age >= 18) and (user_age < 30):
#         #     print("Age doesn't mean anything if you are not some cheese or wine")
#         # elif user_age < 18:
#         #     print("Hey, kiddo! Isn't it time for bed now?")
#         # else:
#         #     print("Everyone gets to be young once, and your turn is over :(")
#
#     elif ms_text == "6":
#         pass
#     elif ms_text == "7":
#         pass
#     elif ms_text == "8":
#         pass
#     elif ms_text == "9":
#         pass
#     elif ms_text == "10":
#         pass
#
#     else:
#         bot.send_message(chat_id, text="–Ø –≤–∞—Å —Å–ª—ã—à—É! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: " + ms_text)
#
#
# def get_anekdot():
#     array_anekdots = []
#     req_anek = requests.get('http://anekdotme.ru/random')
#     soup = bs4.BeautifulSoup(req_anek.text, "html.parser")
#     result_find = soup.select('.anekdot_text')
#     for result in result_find:
#         array_anekdots.append(result.getText().strip())
#     return array_anekdots[0]
#
#
# def get_wolf_quote():
#
#     array_quotes = []
#     req_quote = requests.get('https://statusas.ru/citaty-i-aforizmy/citaty-pro-zhivotnyx-i-zverej/citaty-i-memy-volka-auf.html')
#     soup = bs4.BeautifulSoup(req_quote.text, "html.parser")
#     result_find = soup.find('div', class_='p-15 full-image').find('div', class_='entry-content').select('p')
#     for result in result_find:
#         if (result.getText() != "") and not ("http" in result.getText()):
#             array_quotes.append(result.getText().strip())
#     count = random.randint(1, len(array_quotes)-1)
#     return array_quotes[count]

bot.polling(none_stop=True, interval=0)  # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞

print()
